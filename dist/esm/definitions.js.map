{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface SafeAreaPlugin {\r\n  /**\r\n   * Get the Status bar height on Android and iOS, and on Web it returns 0.\r\n   */\r\n  getStatusBarHeight(): Promise<{ height: number }>;\r\n\r\n  /**\r\n   * Get the Safe area insets for Android and iOS, and on Web it returns 0 for all.\r\n   */\r\n  getSafeAreaInsets(): Promise<SafeAreaType>;\r\n}\r\n\r\nexport interface SafeAreaType {\r\n  /**\r\n   * Safe Area inset value at top.\r\n   */\r\n  top: number;\r\n  /**\r\n   * Safe Area inset value at bottom.\r\n   */\r\n  bottom: number;\r\n  /**\r\n   * Safe Area inset value at left.\r\n   */\r\n  left: number;\r\n  /**\r\n   * Safe Area inset value at right.\r\n   */\r\n  right: number;\r\n}\r\n\r\nexport interface SafeAreaHTMLProps {\r\n  /**\r\n   * Whether to apply safe area insets as `padding` or `margin`.\r\n   *\r\n   * default `padding`.\r\n   */\r\n  mode: 'padding' | 'margin';\r\n  /**\r\n   * Specify the edges you want to apply safe area padding on, separated by comma.\r\n   *\r\n   * For example, to apply padding only on top, left and right, `edges=\"top,left,right\"`.\r\n   *\r\n   * default to all edges.\r\n   */\r\n  edges: string;\r\n}\r\n"]}